import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RealizarVenda extends javax.swing.JFrame {
        
    private DefaultTableModel modelClientes, modelCarrinho;
    private java.util.List<ItemDeVenda> carrinho;
    private LivrariaController sistema;
    private Livro livroSelecionadoParaEdicao;
       
    public RealizarVenda() {
        initComponents();
        
    // Inicializa o controlador
    sistema = App.sistema; // Usa o controlador compartilhado
    carrinho = new java.util.ArrayList<>();
    
    // Inicializa os modelos
    modelClientes = (DefaultTableModel) tblClientes.getModel();
    modelCarrinho = (DefaultTableModel) tblCarrinho.getModel();
    
    // Carrega os dados
    carregarClientes();
    atualizarCarrinho();
    // Acessibilidade
    setupAcessibilidade();
        
        
    }
    
    public RealizarVenda(java.util.List<ItemDeVenda> carrinhoInicial) {
    this();
    this.carrinho.addAll(carrinhoInicial);
    atualizarCarrinho();
}
    
    private void carregarClientes() {
    modelClientes.setRowCount(0); // Limpa a tabela
    for (Cliente cliente : sistema.getClientes()) {
        Object[] row = {
            cliente.getNome(),
            cliente.getCpf(),
            cliente.getTelefone(),
            cliente.getEmail()
        };
        modelClientes.addRow(row);
    }
}
        
    private void pesquisarClientes() {
    String idTexto = txtId.getText().trim();
    String nome = txtNomeCliente.getText().toLowerCase().trim();

    modelClientes.setRowCount(0);
    for (Cliente cliente : sistema.getClientes()) {
        boolean matchId = idTexto.isEmpty() || String.valueOf(cliente.getId()).equals(idTexto);
        boolean matchNome = nome.isEmpty() || cliente.getNome().toLowerCase().contains(nome);

        if (matchId && matchNome) {
            Object[] row = {
                cliente.getNome(),
                cliente.getCpf(),
                cliente.getTelefone(),
                cliente.getEmail()
            };
            modelClientes.addRow(row);
        }
    }
}  
    
    private void atualizarCarrinho() {
    modelCarrinho.setRowCount(0);
    for (ItemDeVenda item : carrinho) {
        Object[] row = {
            item.getLivro().getIsbn(),
            item.getLivro().getTitulo(),
            item.getLivro().getAutor(),
            item.getLivro().getCategoria(),
            String.format("%.2f", item.getLivro().getPrecoCusto()),
            String.format("%.2f", item.getLivro().getPrecoVenda()),
            item.getQuantidade()
        };
        modelCarrinho.addRow(row);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCarrinho = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        btnRemover = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnFinalizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel3.setText("Nome:");

        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, txtId});

        tblClientes.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Telefone", "E-mail"
            }
        ));
        jScrollPane1.setViewportView(tblClientes);

        tblCarrinho.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tblCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "TÃ­tulo", "Autor", "Categoria", "Custo", "Venda", "Quantidade"
            }
        ));
        tblCarrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCarrinhoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCarrinho);

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel6.setText("Carrinho");

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel4.setText("Quantidade:");

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel5.setText("Subtotal:");

        txtSubTotal.setEditable(false);
        txtSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubTotalActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnRemover.setText("Remover item");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        jLabel1.setText("Realizar Venda");

        btnFinalizar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnFinalizar.setText("Finalizar Venda");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel7.setText("Clientes");

        btnCancelar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAdicionar.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        btnAdicionar.setText("Adicionar item");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(313, 313, 313))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFinalizar)))
                        .addGap(6, 6, 6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdicionar, btnCancelar, btnFinalizar, btnRemover});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemover)
                            .addComponent(btnAdicionar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar)
                            .addComponent(btnFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdicionar, btnCancelar, btnFinalizar, btnRemover});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        pesquisarClientes();
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        pesquisarClientes();
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
     int selectedRow = tblClientes.getSelectedRow();

    // Se nenhum cliente for selecionado
    if (selectedRow < 0) {
        int opcao = JOptionPane.showConfirmDialog(
            this,
            "Nenhum cliente selecionado. Deseja cadastrar um novo cliente?",
            "Cliente nÃ£o selecionado",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (opcao == JOptionPane.YES_OPTION) {
            new CadastroCliente().setVisible(true);
            this.dispose();
        } else {
            int sair = JOptionPane.showConfirmDialog(
                this,
                "Deseja voltar ao menu principal?",
                "Voltar",
                JOptionPane.YES_NO_OPTION
            );
            if (sair == JOptionPane.YES_OPTION) {
                new TelaInicial().setVisible(true);
                this.dispose();
            }
        }
        return;
    }

    // Verifica se o carrinho estÃ¡ vazio
    if (carrinho.isEmpty()) {
        JOptionPane.showMessageDialog(
            this,
            "O carrinho estÃ¡ vazio. Adicione itens antes de finalizar.",
            "Erro",
            JOptionPane.ERROR_MESSAGE
        );
        return;
    }

    // Obter cliente selecionado
    String nomeCliente = (String) modelClientes.getValueAt(selectedRow, 0);
    Cliente cliente = null;
    for (Cliente c : sistema.getClientes()) {
        if (c.getNome().equals(nomeCliente)) {
            cliente = c;
            break;
        }
    }

    if (cliente == null) {
        JOptionPane.showMessageDialog(this, "Cliente invÃ¡lido.", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }

    //Finalizar venda
    sistema.finalizarVenda(cliente, new ArrayList<>(carrinho));

    //Calcular total
    double total = carrinho.stream().mapToDouble(ItemDeVenda::getSubtotal).sum();

    //Mensagem de sucesso
    JOptionPane.showMessageDialog(
        this,
        "Venda realizada com sucesso!\n\n" +
        "Cliente: " + cliente.getNome() + "\n" +
        "Total: R$ " + String.format("%.2f", total),
        "Sucesso",
        JOptionPane.INFORMATION_MESSAGE
    );

    // Voltar ao menu
    new TelaInicial().setVisible(true);
    this.dispose();

    
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int selectedRow = tblCarrinho.getSelectedRow();
        if (selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Selecione um item do carrinho para remover.", "Aviso", JOptionPane.WARNING_MESSAGE);
        return;
    }

    carrinho.remove(selectedRow);
    atualizarCarrinho();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubTotalActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
 int row = tblCarrinho.getSelectedRow();
    if (row < 0) {
        txtSubTotal.setText("0,00");
        return;
    }

    // Obter o ISBN da linha selecionada
    Object isbnObj = modelCarrinho.getValueAt(row, 0);
    if (isbnObj == null) {
        txtSubTotal.setText("0,00");
        return;
    }

    String isbn = isbnObj.toString().trim();

    // Buscar o livro real no sistema
    Livro livro = null;
    for (Livro l : App.sistema.getLivros()) {
        if (l.getIsbn().equals(isbn)) {
            livro = l;
            break;
        }
    }

    if (livro == null) {
        JOptionPane.showMessageDialog(this, "Livro nÃ£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
        txtSubTotal.setText("0,00");
        return;
    }

    // Atualizar quantidade no carrinho
    try {
        int quantidade = Integer.parseInt(txtQuantidade.getText().trim());
        if (quantidade <= 0) throw new NumberFormatException();

        // Atualiza o item no carrinho
        ItemDeVenda item = new ItemDeVenda(livro, quantidade);
        carrinho.set(row, item);

        // Recalcula subtotal
        double subtotal = quantidade * livro.getPrecoVenda();
        txtSubTotal.setText(String.format("%.2f", subtotal).replace('.', ','));

        // Atualiza a tabela
        atualizarCarrinho();

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Digite uma quantidade vÃ¡lida.", "Erro", JOptionPane.ERROR_MESSAGE);
        txtQuantidade.setText("1");
        txtQuantidadeActionPerformed(evt); // Recalcula
    }
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void atualizarSubtotal() {
    if (livroSelecionadoParaEdicao == null) {
        txtSubTotal.setText("0,00");
        return;
    }

    String qtdText = txtQuantidade.getText().trim();
    if (qtdText.isEmpty()) {
        txtSubTotal.setText("0,00");
        return;
    }

    try {
        int quantidade = Integer.parseInt(qtdText);
        if (quantidade <= 0) {
            JOptionPane.showMessageDialog(this, "A quantidade deve ser maior que zero.", "Erro", JOptionPane.ERROR_MESSAGE);
            txtQuantidade.setText("1");
            return;
        }

        double subtotal = quantidade * livroSelecionadoParaEdicao.getPrecoVenda();
        txtSubTotal.setText(String.format("%.2f", subtotal));

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Digite um nÃºmero vÃ¡lido para a quantidade.", "Erro", JOptionPane.ERROR_MESSAGE);
        txtQuantidade.setText("1");
        atualizarSubtotal();
    }
}
       
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja cancelar a venda?", "Cancelar Venda", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
        new TelaInicial().setVisible(true);
        this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        new ConsultarEstoque().setVisible(true);
        this.dispose(); // Vai para a tela de consulta para adicionar mais itens
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void tblCarrinhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCarrinhoMouseClicked
        int row = tblCarrinho.getSelectedRow();
    if (row >= 0) {
        // Obter o ISBN (ou ID) do livro na tabela
        Object isbnObj = modelCarrinho.getValueAt(row, 0);
        if (isbnObj == null) return;

        String isbn = isbnObj.toString().trim();

        // Buscar o livro na lista de livros usando o ISBN
        livroSelecionadoParaEdicao = null;
        for (Livro livro : App.sistema.getLivros()) {
        if (isbn.equals(livro.getIsbn())) { // â Compara por ISBN (String)
        livroSelecionadoParaEdicao = livro;
        break;
            }
        }
        
        if (livroSelecionadoParaEdicao == null) {
        JOptionPane.showMessageDialog(this, "Livro nÃ£o encontrado no sistema.", "Erro", JOptionPane.ERROR_MESSAGE);
        txtQuantidade.setText("1");
        txtSubTotal.setText("0,00");
        return;
        }
     

        // Preencher quantidade atual
        int quantidade = (int) modelCarrinho.getValueAt(row, 6); // coluna "Quantidade"
        txtQuantidade.setText(String.valueOf(quantidade));

        // Calcular e exibir subtotal
        double subtotal = quantidade * livroSelecionadoParaEdicao.getPrecoVenda();
        txtSubTotal.setText(String.format("%.2f", subtotal));
    }
    }//GEN-LAST:event_tblCarrinhoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RealizarVenda().setVisible(true);
            }
        });
    }
    
    
    private void setupAcessibilidade() {
    // NavegaÃ§Ã£o por teclado
    txtId.setFocusTraversalKeysEnabled(true);
    txtNomeCliente.setFocusTraversalKeysEnabled(true);
    btnAdicionar.setFocusTraversalKeysEnabled(true);
    btnRemover.setFocusTraversalKeysEnabled(true);
    btnFinalizar.setFocusTraversalKeysEnabled(true);
    btnCancelar.setFocusTraversalKeysEnabled(true);

    // Foco inicial
     txtId.requestFocus();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCarrinho;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtSubTotal;
    // End of variables declaration//GEN-END:variables
}
